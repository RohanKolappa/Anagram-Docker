version: "3"

services:

  service-flask:
    restart: always
    build: #specifies the directory that contains the Dockerfile containing the instructions for building this service
      context: ./app #context is used to specify a path to a directory that contains a Dockerfile
    container_name: service-flask #what i would type into server for adminer container in browser to view database
    #links: might have to use this to connect my mysql db container to this flask application container
     # - mysql
    ports:
      - 5000:5000
    networks:
      - app_network


  mysql:
    restart: always
    #image: mysql #from command in db/Dockerfile does this, so comment this line and do it in dockerfile
    build:
      context: ./db
    container_name: mysql
#    ports:
#      - 3309:3306 #dont want to leave this database port open
    networks:
      - app_network
    #environment: #place this inside of db/Dockerfile so that I can access the mysql_admin inside a container
      #MYSQL_ROOT_PASSWORD: root
    #volumes:
      #- ./db:/docker-entrypoint-initdb.d/:ro


  adminer:
    image: adminer
    restart: always
    container_name: adminer
    ports:
      - 8080:8080
    networks:
      - app_network


networks:
  app_network:
    driver: bridge


#  app:
#    build: ./app
#    links:
#      - db
#    ports:
#      - "5000:5000"

#  db:
#    build: ./db
#    ports:
#      - "32000:3306" #even using a different port like 32000 does not ensure safety from hackers
#    environment:
#      MYSQL_ROOT_PASSWORD: root
#    volumes:
#      - ./db:/docker-entrypoint-initdb.d/:ro